# -*- coding: utf-8 -*-
"""Project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Onf26gMn_ti6QV2Hiq7PlBkG32m3uYQf
"""

import pandas as pd
import numpy as np
from matplotlib.pyplot import subplots
!pip install ISLP

import numpy as np
import pandas as pd
from matplotlib.pyplot import subplots
import statsmodels.api as sm
from ISLP import load_data
from ISLP.models import (ModelSpec as MS,
summarize)

from ISLP import load_data
auto = load_data('Auto')
from ISLP import confusion_table
from ISLP.models import contrast
from sklearn.discriminant_analysis import \
(LinearDiscriminantAnalysis as LDA, QuadraticDiscriminantAnalysis as QDA)
from sklearn.naive_bayes import GaussianNB
from sklearn.neighbors import KNeighborsClassifier
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
auto.columns

auto.describe().iloc[:,:4]

"""THe x axis are the miles and the y axis are the gallons of gas."""

import seaborn as sns

auto

"""This graph predicts the number of cylinders used based on the mpg of the car. More cylinders appear to be less fuel efficient."""

from sklearn.linear_model import LinearRegression
import numpy as np

X = auto[['year']]
y = auto['cylinders']


model = LinearRegression()
model.fit(X, y)


X_pred = np.linspace(X.min(), X.max(), 100).reshape(-1, 1)
y_pred = model.predict(X_pred)

# Plotting the data and regression line
plt.figure(figsize=(10, 6))
plt.scatter(X, y, label='Data', color='blue', alpha=0.7)
plt.plot(X_pred, y_pred, color='red', label='Predicted', linewidth=2)
plt.xlabel('Year')
plt.ylabel('Number of Cylinders')
plt.title('Predicted Number of Cylinders vs. Year')
plt.legend()
plt.gca().spines[['top', 'right']].set_visible(False)
plt.show()

"""This graph measures the increase in mpg for each year model. The y axis is labeled as mpg and the x axis is labeled for the year. This ensures an accurate visulization of the graph, since I am measuring the increase in fuel efficiency as the years pass. As technological advancements occur over the years, cars are able to use fuel more efficiently, resulting in higher mileage per gallon. This data goes from 1970 to 1982. Based on the steady rise in miles per gallon each year, it is safe to assume that modern day cars outperform these numbers by a large margin."""

from sklearn.linear_model import LinearRegression

X = auto[['mpg']]
y = auto['cylinders']

model = LinearRegression()
model.fit(X, y)

y_pred = model.predict(X)

plt.scatter(auto['mpg'], auto['cylinders'], label='Actual Data')
plt.plot(auto['mpg'], y_pred, color='red', label='Predicted Line')

plt.xlabel('MPG')
plt.ylabel('Cylinders')
plt.legend()
plt.show()

"""Predict amount of Cyclinders, linear model.
y = mpg
x = cylinders, weight, etc
"""

from sklearn.linear_model import LinearRegression

X = auto[['mpg', 'weight']]
y = auto['cylinders']

model = LinearRegression()
model.fit(X, y)

X_pred = [[min(auto['mpg']), max(auto['weight'])], [max(auto['mpg']), min(auto['weight'])]]

y_pred = model.predict(X_pred)

auto.plot(kind='scatter', x='mpg', y='weight')
plt.gca().spines[['top', 'right']].set_visible(False)

plt.plot([X_pred[0][0], X_pred[1][0]], [X_pred[0][1], X_pred[1][1]], color='red', label='Predicted')


plt.xlabel('Mpg')
plt.ylabel('Weight')
plt.legend()
plt.show()

"""This model predicts the number"""

auto["mpg"]